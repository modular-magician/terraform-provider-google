---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
layout: "google"
page_title: "Google: google_app_engine_standard_app_version"
sidebar_current: "docs-google-app-engine-standard-app-version"
description: |-
  Standard App Version resource to create a new version of standard GAE Application.
---

# google\_app\_engine\_standard\_app\_version

Standard App Version resource to create a new version of standard GAE Application.
Currently supporting Zip and File Containers.
Currently does not support async operation checking.


To get more information about StandardAppVersion, see:

* [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/appengine/docs/admin-api/deploying-overview)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=app_engine_standard_app_version&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - App Engine Standard App Version


```hcl
resource "google_project" "my_project" {
  name       = "tf-test-project"
  project_id = "test-project"
  org_id     = "123456789"
}

resource "google_app_engine_application" "app" {
  project     = "${google_project.my_project.project_id}"
  location_id = "us-central"
}


resource "google_app_engine_app_version" "name" {
  version_id = "v31"
  project = "${google_app_engine_application.app.project}/services/default"
  runtime = "nodejs10"
  api_config = {}
  endpoints_api_service = {}
  entrypoint {
    shell = "node index.js"
  }
```

## Argument Reference

The following arguments are supported:


* `runtime` -
  (Required)
  Desired runtime. Example: python27.

* `api_config` -
  (Required)
  Serving configuration for Google Cloud Endpoints.  Structure is documented below.

* `endpoints_api_service` -
  (Required)
  Cloud Endpoints configuration. If endpointsApiService is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.  Structure is documented below.

* `entrypoint` -
  (Required)
  The entrypoint for the application.  Structure is documented below.


The `api_config` block supports:

* `auth_fail_action` -
  (Optional)
  authFailAction

* `login` -
  (Optional)
  login

* `script` -
  (Optional)
  script

* `security_level` -
  (Optional)
  securityLevel

* `url` -
  (Optional)
  url

The `endpoints_api_service` block supports:

* `name` -
  (Optional)
  name

* `config_id` -
  (Optional)
  configId

* `rollout_strategy` -
  (Optional)
  rolloutStrategy

The `entrypoint` block supports:

* `shell` -
  (Optional)
  shell

- - -


* `version_id` -
  (Optional)
  Relative name of the version within the service. Example v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".

* `inbound_services` -
  (Optional)
  Before an application can receive email or XMPP messages, the application must be configured to enable the service.

* `instance_class` -
  (Optional)
  Instance class that is used to run this version. Valid values are
  AutomaticScaling F1, F2, F4, F4_1G
  ManualScaling or BasicScaling B1, B2, B4, B8, B4_1G
  Defaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.

* `zones` -
  (Optional)
  The Google Compute Engine zones that are supported by this version in the App Engine flexible environment.

* `resources` -
  (Optional)
  Machine resources for this version. Only applicable in the App Engine flexible environment.  Structure is documented below.

* `runtime_channel` -
  (Optional)
  The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.

* `threadsafe` -
  (Optional)
  Whether multiple requests can be dispatched to this version at once.

* `vm` -
  (Optional)
  Whether to deploy this version in a container on a virtual machine.

* `beta_settings` -
  (Optional)
  Metadata settings that are supplied to this version to enable beta runtime features.  Structure is documented below.

* `env` -
  (Optional)
  App Engine execution environment for this version. Defaults to standard.

* `serving_status` -
  (Optional)
  Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
  SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.

* `runtime_api_version` -
  (Optional)
  The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref

* `handlers` -
  (Optional)
  An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted. Only returned in GET requests if view=FULL is set.  Structure is documented below.

* `error_handlers` -
  (Optional)
  Custom static error pages. Limited to 10KB per page.  Structure is documented below.

* `libraries` -
  (Optional)
  Configuration for third-party Python runtime libraries that are required by the application.  Structure is documented below.

* `env_variables` -
  (Optional)
  Map of environment variables
  An object containing a list of "key": value pairs.
  Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.

* `default_expiration` -
  (Optional)
  Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time.

* `health_check` -
  (Optional)
  Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.  Structure is documented below.

* `readiness_check` -
  (Optional)
  Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.  Structure is documented below.

* `liveness_check` -
  (Optional)
  Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instances  Structure is documented below.

* `nobuild_files_regex` -
  (Optional)
  Files that match this pattern will not be built into this version. Only applicable for Go runtimes.

* `deployment` -
  (Optional)
  Code and application artifacts that make up this version.  Structure is documented below.

* `automatic_scaling` -
  (Optional)
  Automatic scaling is based on request rate, response latencies, and other application metrics.  Structure is documented below.

* `service` -
  (Optional)
  Service

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


The `resources` block supports:

* `cpu` -
  (Optional)
  cpu

* `disk_gb` -
  (Optional)
  disk in gb

* `memory_gb` -
  (Optional)
  memoryGb in gb

* `volumes` -
  (Optional)
  volumes  Structure is documented below.


The `volumes` block supports:

* `name` -
  (Optional)
  name

* `volume_type` -
  (Optional)
  volumeType

* `size_gb` -
  (Optional)
  sizeGb

The `beta_settings` block supports:

* `key` - (Required) The identifier for this object. Format specified above.

* `value` -
  (Optional)
  value

The `handlers` block supports:

* `url_regex` -
  (Optional)
  url regex

* `security_level` -
  (Optional)
  Security Level

* `login` -
  (Optional)
  Login

* `auth_fail_action` -
  (Optional)
  authFailAction

* `redirect_http_response_code` -
  (Optional)
  redirectHttpResponseCode

* `static_files` -
  (Optional)
  staticFiles  Structure is documented below.

* `script` -
  (Optional)
  script  Structure is documented below.

* `api_endpoint` -
  (Optional)
  apiEndpoint  Structure is documented below.


The `static_files` block supports:

* `path` -
  (Optional)
  path

* `upload_path_regex` -
  (Optional)
  uploadPathRegex

* `http_headers` -
  (Optional)
  httpHeaders  Structure is documented below.

* `mime_type` -
  (Optional)
  mimeType

* `expiration` -
  (Optional)
  expiration

* `require_matching_file` -
  (Optional)
  requireMatchingFile

* `application_readable` -
  (Optional)
  applicationReadable


The `http_headers` block supports:

* `key` - (Required) The identifier for this object. Format specified above.

* `value` -
  (Optional)
  value

The `script` block supports:

* `script_path` -
  (Optional)
  script paths

The `api_endpoint` block supports:

* `script_path` -
  (Optional)
  script path

The `error_handlers` block supports:

* `error_code` -
  (Optional)
  errorCode

* `static_file` -
  (Optional)
  staticFile

* `mime_type` -
  (Optional)
  mimeType

The `libraries` block supports:

* `name` -
  (Optional)
  name

* `version` -
  (Optional)
  version

The `health_check` block supports:

* `disable_health_check` -
  (Optional)
  disableHealthCheck

* `host` -
  (Optional)
  host

* `healthy_threshold` -
  (Optional)
  healthyThreshold

* `unhealthy_threshold` -
  (Optional)
  unhealthyThreshold

* `restart_threshold` -
  (Optional)
  restartThreshold

* `check_interval` -
  (Optional)
  checkInterval

* `timeout` -
  (Optional)
  timeout

The `readiness_check` block supports:

* `path` -
  (Optional)
  path

* `host` -
  (Optional)
  host

* `failure_threshold` -
  (Optional)
  failureThreshold

* `success_threshold` -
  (Optional)
  successThreshold

* `check_interval` -
  (Optional)
  checkInterval

* `timeout` -
  (Optional)
  timeout

* `app_start_timeout` -
  (Optional)
  appStartTimeout

The `liveness_check` block supports:

* `path` -
  (Optional)
  path

* `host` -
  (Optional)
  host

* `failure_threshold` -
  (Optional)
  failureThreshold

* `success_threshold` -
  (Optional)
  successThreshold

* `check_interval` -
  (Optional)
  checkInterval

* `timeout` -
  (Optional)
  timeout

* `initial_delay` -
  (Optional)
  initialDelay

The `deployment` block supports:

* `files` -
  (Optional)
  files  Structure is documented below.

* `zip` -
  (Optional)
  Zip File  Structure is documented below.


The `files` block supports:

* `name` - (Required) The identifier for this object. Format specified above.

* `sha1_sum` -
  (Optional)
  sha1Sum

* `source_url` -
  (Optional)
  sourceUrl

The `zip` block supports:

* `source_url` -
  (Optional)
  Source URL

* `files_count` -
  (Optional)
  files count

The `automatic_scaling` block supports:

* `cool_down_period` -
  (Optional)
  coolDownPeriod

* `cpu_utilization` -
  (Optional)
  cpuUtilization  Structure is documented below.

* `max_concurrent_requests` -
  (Optional)
  maxConcurrentRequests

* `max_idle_instances` -
  (Optional)
  maxIdleInstances

* `max_total_instances` -
  (Optional)
  maxTotalInstances

* `max_pending_latency` -
  (Optional)
  maxPendingLatency

* `min_idle_instances` -
  (Optional)
  minIdleInstances

* `min_total_instances` -
  (Optional)
  minTotalInstances

* `min_pending_latency` -
  (Optional)
  minPendingLatency

* `request_utilization` -
  (Optional)
  requestUtilization  Structure is documented below.

* `network_utilization` -
  (Optional)
  networkUtilization  Structure is documented below.

* `standard_scheduler_settings` -
  (Optional)
  standardSchedulerSettings  Structure is documented below.


The `cpu_utilization` block supports:

* `aggregation_window_length` -
  (Optional)
  aggregationWindowLength

* `target_utilization` -
  (Optional)
  targetUtilization

The `request_utilization` block supports:

* `target_request_count_per_second` -
  (Optional)
  targetRequestCountPerSecond

* `target_concurrent_requests` -
  (Optional)
  targetConcurrentRequests

The `network_utilization` block supports:

* `target_sent_bytes_per_second` -
  (Optional)
  targetSentBytesPerSecond

* `target_sent_packets_per_second` -
  (Optional)
  targetSentPacketsPerSecond

* `target_received_bytes_per_second` -
  (Optional)
  targetReceivedBytesPerSecond

* `target_received_packets_per_second` -
  (Optional)
  targetReceivedPacketsPerSecond

The `standard_scheduler_settings` block supports:

* `target_cpu_utilization` -
  (Optional)
  targetCpuUtilization

* `target_throughput_utilization` -
  (Optional)
  targetThroughputUtilization

* `min_instances` -
  (Optional)
  minInstances

* `max_instances` -
  (Optional)
  maxInstances

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:


* `name` -
  Full path to the Version resource in the API. Example, "v1".


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

StandardAppVersion can be imported using any of these accepted formats:

```
$ terraform import google_app_engine_standard_app_version.default {{project}}/{{serviceId}}/{{versionId}}
$ terraform import google_app_engine_standard_app_version.default {{serviceId}}/{{versionId}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.

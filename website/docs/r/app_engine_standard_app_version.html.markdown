---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
layout: "google"
page_title: "Google: google_app_engine_standard_app_version"
sidebar_current: "docs-google-app-engine-standard-app-version"
description: |-
  Standard App Version resource to create a new version of standard GAE Application.
---

# google\_app\_engine\_standard\_app\_version

Standard App Version resource to create a new version of standard GAE Application.
Currently supporting Zip and File Containers.
Currently does not support async operation checking.


To get more information about StandardAppVersion, see:

* [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/appengine/docs/admin-api/deploying-overview)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=app_engine_standard_app_version&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - App Engine Standard App Version


```hcl
resource "google_project" "my_project" {
  name       = "tf-test-project"
  project_id = "test-project"
  org_id     = "123456789"
}

resource "google_app_engine_application" "app" {
  project     = "${google_project.my_project.project_id}"
  location_id = "us-central"
}


resource "google_app_engine_app_version" "name" {
  version_id = "v31"
  project = "${google_app_engine_application.app.project}"
  service = "default"
  runtime = "nodejs10"
  api_config = {}
  endpoints_api_service = {}
  entrypoint {
    shell = "node index.js"
  }
```

## Argument Reference

The following arguments are supported:


* `runtime` -
  (Required)
  Desired runtime. Example: python27.

* `entrypoint` -
  (Required)
  The entrypoint for the application.  Structure is documented below.


The `entrypoint` block supports:

* `shell` -
  (Optional)
  shell

- - -


* `version_id` -
  (Optional)
  Relative name of the version within the service. Example v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".

* `threadsafe` -
  (Optional)
  Whether multiple requests can be dispatched to this version at once.

* `runtime_api_version` -
  (Optional)
  The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref

* `handlers` -
  (Optional)
  An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted. Only returned in GET requests if view=FULL is set.  Structure is documented below.

* `libraries` -
  (Optional)
  Configuration for third-party Python runtime libraries that are required by the application.  Structure is documented below.

* `env_variables` -
  (Optional)
  Map of environment variables
  An object containing a list of "key": value pairs.
  Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.

* `deployment` -
  (Optional)
  Code and application artifacts that make up this version.  Structure is documented below.

* `service` -
  (Optional)
  Service

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


The `handlers` block supports:

* `url_regex` -
  (Optional)
  url regex

* `security_level` -
  (Optional)
  Security Level

* `script` -
  (Optional)
  script  Structure is documented below.


The `script` block supports:

* `script_path` -
  (Optional)
  script paths

The `libraries` block supports:

* `name` -
  (Optional)
  name

* `version` -
  (Optional)
  version

The `deployment` block supports:

* `files` -
  (Optional)
  files  Structure is documented below.


The `files` block supports:

* `name` - (Required) The identifier for this object. Format specified above.

* `sha1_sum` -
  (Optional)
  sha1Sum

* `source_url` -
  (Optional)
  sourceUrl

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:


* `name` -
  Full path to the Version resource in the API. Example, "v1".


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

StandardAppVersion can be imported using any of these accepted formats:

```
$ terraform import google_app_engine_standard_app_version.default {{project}}/{{serviceId}}/{{versionId}}
$ terraform import google_app_engine_standard_app_version.default {{serviceId}}/{{versionId}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.

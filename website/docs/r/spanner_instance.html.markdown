---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
layout: "google"
page_title: "Google: google_spanner_instance"
sidebar_current: "docs-google-spanner-instance"
description: |-
  An isolated set of Cloud Spanner resources on which databases can be
  hosted.
---

# google\_spanner\_instance

An isolated set of Cloud Spanner resources on which databases can be
hosted.


To get more information about Instance, see:

* [API documentation](https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instances)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/spanner/)

## Argument Reference

The following arguments are supported:


* `config` -
  (Required)
  A reference to the instance configuration.

* `display_name` -
  (Required)
  The descriptive name for this instance as it appears in UIs. Must be
  unique per project and between 4 and 30 characters in length.

* `num_nodes` -
  (Required)
  The number of nodes allocated to this instance.


- - -


* `name` -
  (Optional)
  A unique identifier for the instance, which cannot be changed after
  the instance is created. The name must be between 6 and 30 characters
  in length.

* `labels` -
  (Optional)
  Cloud Labels are a flexible and lightweight mechanism for organizing
  cloud resources into groups that reflect a customer's organizational
  needs and deployment strategies. Cloud Labels can be used to filter
  collections of resources. They can be used to control how resource
  metrics are aggregated. And they can be used as arguments to policy
  management rules (e.g. route, firewall, load balancing, etc.).
  Label keys must be between 1 and 63 characters long and must conform
  to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.
  Label values must be between 0 and 63 characters long and must conform
  to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
  No more than 64 labels can be associated with a given resource.
  See https://goo.gl/xmQnxf for more information on and examples of
  labels.
  If you plan to use labels in your own code, please note that
  additional characters may be allowed in the future. And so you are
  advised to use an internal label representation, such as JSON, which
  doesn't rely upon specific characters being disallowed. For example,
  representing labels as the string: name + "_" + value would prove
  problematic if we were to allow "_" in a future release.
  An object containing a list of "key": value pairs.
  Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:


* `state` -
  Instance status: `CREATING` or `READY`.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

Instance can be imported using any of these accepted formats:

```
$ terraform import google_spanner_instance.default projects/{{project}}/instances/{{name}}
$ terraform import google_spanner_instance.default {{project}}/{{name}}
$ terraform import google_spanner_instance.default {{name}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.

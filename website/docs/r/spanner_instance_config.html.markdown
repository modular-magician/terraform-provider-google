---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
layout: "google"
page_title: "Google: google_spanner_instance_config"
sidebar_current: "docs-google-spanner-instance-config"
description: |-
  A possible configuration for a Cloud Spanner instance.
---

# google\_spanner\_instance\_config

A possible configuration for a Cloud Spanner instance. Configurations
define the geographic placement of nodes and their replication.



## Argument Reference

The following arguments are supported:



- - -


* `name` -
  (Optional)
  A unique identifier for the instance configuration. Values are of the
  form projects/<project>/instanceConfigs/[a-z][-a-z0-9]*
* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:


* `display_name` -
  The name of this instance configuration as it appears in UIs.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

InstanceConfig can be imported using any of these accepted formats:

```
$ terraform import google_spanner_instance_config.default projects/{{project}}/instanceConfigs/{{name}}
$ terraform import google_spanner_instance_config.default {{project}}/{{name}}
$ terraform import google_spanner_instance_config.default {{name}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.
